// <auto-generated />
using System;
using ChallengeViceri.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChallengeViceri.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ChallengeViceriContext))]
    [Migration("20251005025308_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChallengeViceri.Domain.Entities.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataNascimento");

                    b.Property<double>("Height")
                        .HasColumnType("double precision")
                        .HasColumnName("Altura");

                    b.Property<string>("HeroName")
                        .IsRequired()
                        .HasColumnType("character varying(120)")
                        .HasColumnName("NomeHeroi");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(120)")
                        .HasColumnName("Nome");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("Peso");

                    b.HasKey("Id");

                    b.ToTable("Herois", (string)null);
                });

            modelBuilder.Entity("ChallengeViceri.Domain.Entities.HeroSuperpower", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("integer")
                        .HasColumnName("HeroiId");

                    b.Property<int>("SuperpowerId")
                        .HasColumnType("integer")
                        .HasColumnName("SuperpoderId");

                    b.HasKey("HeroId", "SuperpowerId");

                    b.HasIndex("SuperpowerId");

                    b.ToTable("HeroisSuperpoderes", (string)null);
                });

            modelBuilder.Entity("ChallengeViceri.Domain.Entities.Superpower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("character varying(250)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Superpoder");

                    b.HasKey("Id");

                    b.ToTable("Superpoderes", (string)null);
                });

            modelBuilder.Entity("ChallengeViceri.Domain.Entities.HeroSuperpower", b =>
                {
                    b.HasOne("ChallengeViceri.Domain.Entities.Hero", "Hero")
                        .WithMany("HeroSuperpowers")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeViceri.Domain.Entities.Superpower", "Superpower")
                        .WithMany("HeroSuperpowers")
                        .HasForeignKey("SuperpowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("Superpower");
                });

            modelBuilder.Entity("ChallengeViceri.Domain.Entities.Hero", b =>
                {
                    b.Navigation("HeroSuperpowers");
                });

            modelBuilder.Entity("ChallengeViceri.Domain.Entities.Superpower", b =>
                {
                    b.Navigation("HeroSuperpowers");
                });
#pragma warning restore 612, 618
        }
    }
}
